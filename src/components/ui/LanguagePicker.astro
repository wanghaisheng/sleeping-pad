---
import Icon from "./icons/Icon.astro";
interface Props {
  supportedLangLabels: Record<string, string>;
}
const { supportedLangLabels } = Astro.props;
---

<div class="hs-dropdown relative inline-flex">
  <button
    id="hs-dropdown-default"
    type="button"
    aria-label="Change language"
    class="hs-dropdown-toggle inline-flex items-center gap-x-2 rounded-lg px-1.5 py-1.5 text-sm font-medium text-neutral-600 outline-none ring-zinc-500 transition duration-300 hover:bg-neutral-200 hover:text-orange-400 dark:border-neutral-700 dark:text-neutral-400 dark:ring-zinc-200 dark:hover:bg-neutral-700 dark:hover:text-orange-300 dark:focus:outline-none"
  >
    <Icon name="earth" />
    <svg
      class="size-4 hs-dropdown-open:rotate-180"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
    >
      <path d="m6 9 6 6 6-6"></path>
    </svg>
  </button>

  <div
    class="hs-dropdown-menu duration !left-[20%] !top-[98%] mt-2 hidden !transform-none rounded-lg bg-neutral-50 p-2 opacity-0 shadow-md transition-[opacity,margin] before:absolute before:-top-4 before:start-0 before:h-4 before:w-full after:absolute after:-bottom-4 after:start-0 after:h-4 after:w-full hs-dropdown-open:opacity-100 dark:divide-neutral-700 dark:border dark:border-neutral-700 dark:bg-neutral-800 md:!left-[90%] md:!top-[80%]"
    aria-labelledby="hs-dropdown-hover-event"
    data-supported-langs={JSON.stringify(supportedLangLabels)}
  >
    {
      Object.entries(supportedLangLabels).map(([lang, label]) => (
        <button
          class="flex w-full items-center gap-x-3.5 rounded-lg px-3 py-2 text-sm text-neutral-800 hover:bg-neutral-100 focus:bg-neutral-100 focus:outline-none dark:text-neutral-400 dark:hover:bg-neutral-700 dark:hover:text-neutral-300 dark:focus:bg-neutral-700"
          data-lang={lang}
        >
          {label}
        </button>
      ))
    }
  </div>
</div>

<script>
  import "@preline/dropdown/index.js";
</script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Get supported languages from the data attribute
    const dropdownMenu = document.querySelector(".hs-dropdown-menu");
    const supportedLangLabels = JSON.parse(dropdownMenu?.getAttribute("data-supported-langs") || "{}");
    const supportedLanguages = Object.keys(supportedLangLabels);

    const languageButtons = document.querySelectorAll(".hs-dropdown-menu button");
    
    languageButtons.forEach((button) => {
      button.addEventListener("click", function () {
        const targetLang = this.getAttribute("data-lang");
        if (!targetLang || !supportedLanguages.includes(targetLang)) return;

        // Get current path
        const currentPath = window.location.pathname;
        const pathParts = currentPath.split("/").filter(Boolean);
        
        // Simply replace or add the language part
        if (supportedLanguages.includes(pathParts[0])) {
          // Replace existing language
          pathParts[0] = targetLang;
        } else {
          // Add language at the beginning
          pathParts.unshift(targetLang);
        }

        // Reconstruct the URL
        const newPath = `/${pathParts.join("/")}`;
        const finalPath = newPath.endsWith("/") ? newPath : `${newPath}/`;
        
        // Preserve query parameters
        const queryString = window.location.search;
        
        // Navigate to new URL
        window.location.href = `${finalPath}${queryString}`;
      });
    });
  });
</script>